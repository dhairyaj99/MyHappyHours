// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using MyHappyHours.Models;
using System;

namespace MyHappyHours.Migrations
{
    [DbContext(typeof(HappyHourContext))]
    partial class HappyHourContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyHappyHours.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address1");

                    b.Property<string>("Address2");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("PostalCode");

                    b.Property<int?>("placeId");

                    b.HasKey("Id");

                    b.HasIndex("placeId");

                    b.ToTable("addresses");
                });

            modelBuilder.Entity("MyHappyHours.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int?>("placeId");

                    b.HasKey("Id");

                    b.HasIndex("placeId");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("MyHappyHours.Models.place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AddressId");

                    b.Property<string>("Name");

                    b.Property<int?>("SUbcategoryId");

                    b.Property<string>("aliasname");

                    b.Property<int?>("categoryId");

                    b.HasKey("Id");

                    b.ToTable("places");
                });

            modelBuilder.Entity("MyHappyHours.Models.Address", b =>
                {
                    b.HasOne("MyHappyHours.Models.place")
                        .WithMany("addresses")
                        .HasForeignKey("placeId");
                });

            modelBuilder.Entity("MyHappyHours.Models.Category", b =>
                {
                    b.HasOne("MyHappyHours.Models.place")
                        .WithMany("categories")
                        .HasForeignKey("placeId");
                });
#pragma warning restore 612, 618
        }
    }
}
